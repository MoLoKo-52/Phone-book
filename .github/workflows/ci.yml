name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install core dependencies
        run: |
          python -m pip install --upgrade pip
          pip install grpcio grpcio-tools

      - name: Install project dependencies
        run: |
          pip install -r sever/requirements.txt
          pip install pytest flake8 black

      - name: Lint & Test
        working-directory: sever
        run: |
          black .
          flake8 . \
            --exclude phonebook_pb2.py,phonebook_pb2_grpc.py \
            --ignore F401,F541,F841,E501 \
            --max-line-length 100
          pytest --maxfail=1 --disable-warnings -q

  docker-build-push:
    needs: build-test-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: your-dockerhub-user/phonebook-backend:latest

  deploy-to-server:
    if: github.ref == 'refs/heads/main'
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "
            docker pull your-dockerhub-user/phonebook-backend:latest &&
            docker stop phonebook || true &&
            docker rm phonebook  || true &&
            docker run -d --name phonebook \
              -p 50051:50051 \
              your-dockerhub-user/phonebook-backend:latest
          "
